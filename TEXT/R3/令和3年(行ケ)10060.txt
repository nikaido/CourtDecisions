主文
  1 原告の請求を棄却する。
  2 訴訟費用は原告の負担とする。

事実及び理由
第1 請求
  特許庁が不服2020-12543号事件について令和3年3月19日にした審決を取り消す。
第2 事案の概要
  本件は，特許拒絶査定の不服審判請求を不成立とした審決の取消訴訟である。
  1 特許庁における手続の経緯等(当事者間に争いがない。)
    (1)
      原告は，令和元年7月9日，名称を「システムおよび処理方法」とする発明について，特許出願(特願2019-127894号。以下「本件出願」という。)をしたが，令和2年6月22日付けの拒絶査定を受けた。
    (2)
      原告は，令和2年9月8日，同日付け手続補正書を提出するとともに(以下，この手続補正書による補正を「本件補正」という。)，拒絶査定不服審判を請求した。
      特許庁は，上記請求を不服2020-12543号事件として審理を行い，令和3年3月19日，本件補正を却下した上で，「本件審判の請求は，成り立たない。」との審決(以下「本件審決」という。)をし，その謄本は，同年4月6日，原告に送達された
    (3)
      原告は，令和3年4月28日，本件審決の取消しを求める本件訴訟を提起した。
  2 特許請求の範囲の記載
    本件補正前の特許請求の範囲の記載は，請求項1ないし10からなり，その請求項の記載は下記(1)のとおりであり(以下，請求項1に係る発明を「本願発明」という。)，本件補正後の特許請求の範囲の記載は，請求項1ないし8からなり(特許請求の範囲は全文変更)，その請求項の記載は下記(2)のとおりである(以下，本件補正後の請求項1に係る発明を「本件補正発明」という。下線部は，本件補正による補正箇所である。)。
    (1) 本件補正前の特許請求の範囲の記載
      ア 請求項1(本願発明)
        台帳を分散して記録する複数のノードの少なくとも1つに対し，トランザクションのリクエストを送信する複数のプロセスを生成する生成部と，
        トランザクションの指示を受け付け，前記複数のプロセスのいずれかに当該トランザクションのリクエスト送信を割り当てる割当部と，を備えるシステム。
      イ 請求項2
        前記複数のプロセスは，第1プロセスおよび第2プロセスを含み，
        前記第1プロセスが前記リクエストを送信するノードは，前記第2プロセスが前記リクエストを送信するノードと同一である，請求項1に記載のシステム。
      ウ 請求項3
        前記割当部は，ラウンドロビン方式により前記トランザクションのリクエスト送信を割り当てる，請求項1または請求項2に記載のシステム。
      エ 請求項4
        前記複数のノードで形成されるネットワークにおける所定のトランザクションのリクエストに対する平均スループットとプロセス多重度との関係において，プロセス多重度の増加に対する平均スループットの増加の割合が，プロセス多重度が第1値のときに第1割合であり，当該第1値より大きい第2値以上であるときに前記第1割合より小さい第2割合であり，
        前記複数のプロセスの数は，前記第2値よりも小さい数で設定される，請求項1から請求項3のいずれかに記載のシステム。
      オ 請求項5
        前記複数のノードで形成されるネットワークは，コンソーシアム型である，請求項1から請求項4のいずれかに記載のシステム。
      カ 請求項6
        コンピュータが実行する処理方法であって，
        トランザクションの指示を受け付け，
        台帳を分散して記録する複数のノードの少なくとも1つに対し，トランザクションのリクエストを送信する複数のプロセスのいずれかに，前記指示に基づくトランザクションのリクエスト送信を割り当てる，処理方法。
      キ 請求項7
        前記複数のプロセスは，第1プロセスおよび第2プロセスを含み，
        前記第1プロセスが前記リクエストを送信するノードは，前記第2プロセスが前記リクエストを送信するノードと同一である，請求項6に記載の処理方法。
      ク 請求項8
        前記トランザクションのリクエスト送信を割り当てるときには，ラウンドロビン方式を用いる，請求項6または請求項7に記載の処理方法。
      ケ 請求項9
        前記複数のノードで形成されるネットワークにおける所定のトランザクションのリクエストに対する平均スループットとプロセス多重度との関係において，プロセス多重度の増加に対する平均スループットの増加の割合が，プロセス多重度が第1値のときに第1割合であり，当該第1値より大きい第2値以上であるときに前記第1割合より小さい第2割合であり，
        前記複数のプロセスの数は，前記第2値よりも小さい数で設定される，請求項6から請求項8のいずれかに記載の処理方法。
      コ 請求項10
        前記複数のノードで形成されるネットワークは，コンソーシアム型である，請求項6から請求項9のいずれかに記載の処理方法。
    (2) 本件補正後の特許請求の範囲の記載
      ア 請求項1(本件補正発明)
        管理主体が存在しないパブリック型ネットワークにおいて台帳を分散して記録する複数のノードの少なくとも1つに対し，トランザクションのリクエストを送信する複数のプロセスであって，設定されるプロセス多重度に応じた複数のプロセスを生成する生成部と，
        トランザクションの指示を受け付け，前記複数のプロセスのいずれかに当該トランザクションのリクエスト送信を割り当てる割当部と，を備えるシステム。
      イ 請求項2
        前記複数のプロセスは，第1プロセスおよび第2プロセスを含み，
        前記第1プロセスが前記リクエストを送信するノードは，前記第2プロセスが前記リクエストを送信するノードと同一である，請求項1に記載のシステム。
      ウ 請求項3
        前記割当部は，ラウンドロビン方式により前記トランザクションのリクエスト送信を割り当てる，請求項1または請求項2に記載のシステム。
      エ 請求項4
        前記複数のノードで形成されるネットワークにおける所定のトランザクションのリクエストに対する平均スループットと前記プロセス多重度との関係において，当該プロセス多重度の増加に対する平均スループットの増加の割合が，プロセス多重度が第1値のときに第1割合であり，当該第1値より大きい第2値以上であるときに前記第1割合より小さい第2割合であり，
        前記複数のプロセスの数は，前記第2値よりも小さい数で設定される，請求項1から請求項3のいずれかに記載のシステム。
      オ 請求項5
        コンピュータが実行する処理方法であって，
        トランザクションの指示を受け付け，
        管理主体が存在しないパブリック型ネットワークにおいて台帳を分散して記録する複数のノードの少なくとも1つに対し，トランザクションのリクエストを送信する複数のプロセスであって，設定されるプロセス多重度に応じた複数のプロセスのいずれかに，前記指示に基づくトランザクションのリクエスト送信を割り当てる，処理方法。
      カ 請求項6
        前記複数のプロセスは，第1プロセスおよび第2プロセスを含み，
        前記第1プロセスが前記リクエストを送信するノードは，前記第2プロセスが前記リクエストを送信するノードと同一である，請求項5に記載の処理方法。
      キ 請求項7
        前記トランザクションのリクエスト送信を割り当てるときには，ラウンドロビン方式を用いる，請求項5または請求項6に記載の処理方法。
      ク 請求項8
        前記複数のノードで形成されるネットワークにおける所定のトランザクションのリクエストに対する平均スループットと前記プロセス多重度との関係において，当該プロセス多重度の増加に対する平均スループットの増加の割合が，プロセス多重度が第1値のときに第1割合であり，当該第1値より大きい第2値以上であるときに前記第1割合より小さい第2割合であり，
        前記複数のプロセスの数は，前記第2値よりも小さい数で設定される，請求項5から請求項7のいずれかに記載の処理方法。
  3 本件審決の理由の要旨
    本件審決は，本件補正発明は甲第1号証「佐藤竜也ほか，ブロックチェーン基盤Hyperledger  Fabricの性能評価と課題整理，電子情報通信学会技術研究報告，一般社団法人電子情報通信学会，2017年2月24日，第116巻，第491号，p.167-174」(以下「引用文献1」という。)に記載の発明(以下「引用発明」という。)と甲第2号証「特開2019-14135号公報」(平成31年1月31日出願公開。以下「引用文献2」という。)及び甲第3号証「特開2010-278639号公報」(以下「引用文献3」という。)に記載の周知技術に基づいて当業者が容易に発明することができたものであるから，本件補正は独立特許要件(特許法17条の2第6項で準用する同法126条7項)を満たさないので却下すべきものであり(同法159条1項の規定において読み替えて準用する同法53条1項)，本願発明も引用発明と引用文献2及び3に記載の周知技術に基づいて当業者が容易に発明できたものであるから，本件出願は拒絶すべきものと判断した(以下，本件出願に係る願書に添付した明細書を，図面を含めて「本願明細書」という。別紙1参照)。その判断の要旨は以下のとおりである。
    (1) 本件補正発明について
      ア 引用発明の認定
        ブロックチェーン(Blockchain，BC)基盤のOSSプロジェクトであるHyperledgerの基盤実装の一つであるFabricについて性能を中心とした評価を行うものであって，
        Fabricは，コンソーシアムあるいはプライベート型での利用を想定したBC基盤であり，
        マルチホスト上にまたがった環境上にFabricによるBCネットワークを構築し，その上で性能測定を行うものであって，
        クライアントからREST経由でBCネットワークにアクセスし，チェーンコードを実行して負荷をかけることで性能測定を行うものであり，
        負荷をかける際には，複数のクライアントからの同時アクセスを模擬するため，マルチスレッドでトランザクションを並列実行するものであって，
        クライアントによる負荷生成ツールプログラムの処理の流れは，スレッド毎に実行トランザクション(invoke)を指定した回数繰り返す(並列実行)ことを含むものであり，
        スループット測定結果は，並列スレッド数を増やしていくとスループットも増加する傾向にあるが，ある程度並列度を増やすとスループットは頭打ちとなり，スループットが頭打ちになった後も，それ以上に並列度を増やしていくと，挙動が安定しなくなる場合があるため，フロント側でリクエストの流量制御を行う等の対策が必要となり得る，
        BC基盤Hyperledger  Fabricの性能評価。
      イ 本件補正発明と引用発明との一致点
        ネットワークにおいて台帳を分散して記録する複数のノードの少なくとも1つに対し，トランザクションのリクエストを送信する複数の処理単位であって，複数の処理単位を生成する生成部と，
        前記複数の処理単位のいずれかに当該トランザクションのリクエスト送信を割り当てる割当部と，を備えるシステム。
      ウ 本件補正発明と引用発明との相違点
        (ア) 相違点1
          本件補正発明は，「管理主体が存在しないパブリック型」ネットワークであるのに対して，引用発明の，ブロックチェーン基盤実装の一つである「Fabric」は，「コンソーシアムあるいはプライベート型での利用を想定したBC基盤」である点。
        (イ) 相違点2
          本件補正発明は，処理単位が「プロセス」であって，生成部が複数の「プロセス」を生成し，割当部が前記複数の「プロセス」のいずれかにトランザクションのリクエスト送信を割り当てるものであるのに対して，引用発明は，処理単位が「スレッド」である点。
        (ウ) 相違点3
          本件補正発明は，生成部が「設定されるプロセス多重度に応じた」複数のプロセスを生成するものであるのに対して，引用発明は，そのような特定がなされていない点。
        (エ) 相違点4
          本件補正発明は，割当部が「トランザクションの指示を受け付け」，複数のプロセスのいずれかにトランザクションのリクエスト送信を割り当てるのに対して，引用発明は，そのような特定がなされていない点。
      エ 相違点の容易想到性
        (ア) 相違点1
          引用発明は，コンソーシアムあるいはプライベート型での利用を想定しているとはいえ，引用発明を管理主体が存在しないパブリック型のブロックチェーンには適用できないとする技術的根拠は何ら認められないところ，引用発明を管理主体が存在しないパブリック型のネットワークに適用することには何ら技術的創意は見出せず，当業者であれば適宜実施し得る事項にすぎない。
        (イ) 相違点2
          引用発明において，マルチプロセスを採用して処理単位をプロセスとすることは，引用文献2及び3に示される周知技術に基づいて当業者が適宜なし得るものであり，さらに，甲第4号証「特開2015-88176号公報」(以下「甲4文献」という。)に示されるように，プログラムを実行する単位である複数のプロセスを生成し，クライアント端末から受け取ったリクエストを，前記複数のプロセスのうちの何れかのプロセスに割り当てることが，複数のプロセスを用いたプログラム実行における極めて一般的な処理であることも踏まえれば，引用発明にマルチプロセスを採用した際に，生成部が複数の「プロセス」を生成し，割当部が前記複数の「プロセス」のいずれかにトランザクションのリクエスト送信を割り当てるとすることも，当業者であれば当然になし得るものと認められる。
        (ウ) 相違点3
          引用発明では，「スループットが頭打ちになった後も，それ以上に並列度を増やしていくと，挙動が安定しなくなる場合があるため，フロント側でリクエストの流量制御を行う等の対策が必要となり得る」としており，これはフロント側でリクエスト送信を割り当てるスレッドの数を制限することを示唆するものであって，スレッドの多重度を制限することを示唆するものである。
          上記(イ)のとおり，引用発明において，マルチスレッドに換えて「マルチプロセス」を採用することは，当業者であれば適宜なし得る事項にすぎないと認められるところ，かかるマルチプロセスを採用した場合に，プロセス多重度を制限するため「プロセス多重度に応じた」複数のプロセスを生成することは，リクエスト送信を割り当てるスレッドの数を制限するという上記示唆に基づいて，当業者であれば容易に想到し得るものである。
        (エ) 相違点4
          上記(イ)のとおり，引用発明において，マルチプロセスを採用することは当業者が適宜なし得る事項と認められるところ，引用発明の「BC基盤  Hyperledger  Fabric」を実際のトランザクション処理に用いる場合，「トランザクションの指示を受け付け」て，複数のプロセスのいずれかにトランザクションのリクエスト送信を割り当てることは，当業者であれば当然になし得るものである。
    (2) 本願発明について
      ア 本願発明と引用発明との一致点
        台帳を分散して記録する複数のノードの少なくとも1つに対し，トランザクションのリクエストを送信する複数の処理単位を生成する生成部と，
        前記複数の処理単位のいずれかに当該トランザクションのリクエスト送信を割り当てる割当部と，を備えるシステム。
      イ 本願発明と引用発明との相違点
        (ア) 相違点a(相違点2と同じ)
          本願発明は，処理単位が「プロセス」であって，生成部が複数の「プロセス」を生成し，割当部が前記複数の「プロセス」のいずれかにトランザクションのリクエスト送信を割り当てるものであるのに対して，引用発明は，処理単位が「スレッド」である点。
        (イ) 相違点b(相違点4と同じ)
          本願発明は，割当部が「トランザクションの指示を受け付け」，複数のプロセスのいずれかにトランザクションのリクエスト送信を割り当てるのに対して，引用発明は，そのような特定がなされていない点。
      ウ 相違点の容易想到性
        前記(1)エ(イ)及び(エ)のとおり，相違点a及び相違点bは，いずれも格別のものではない。
  4 取消事由
    本件補正発明の進歩性に関する判断(相違点3の容易想到性の有無)の誤り
第3 当事者の主張
  1 原告
    (1) 相違点3の容易想到性の有無について
      ア 引用文献1の記載事項に関して
        (ア)
          本件審決は，「引用発明では，『スループットが頭打ちになった後も，それ以上に並列度を増やしていくと，挙動が安定しなくなる場合があるため，フロント側でリクエストの流量制御を行う等の対策が必要となり得る』としており，これはフロント側でリクエスト送信を割り当てるスレッドの数を制限することを示唆するものであって，スレッドの多重度を制限することを示唆するものである。」(19頁16ないし21行目)とするが，誤りであり，その結果，相違点3に係る容易想到性の判断にも誤りがある。
          引用文献1の「BCサービス：P2Pプロトコル，分散台帳，コンセンサスマネージャといった要素によって構成される。P2Pプロトコルにより，P2Pでの双方向ストリーミング，フロー制御，リクエストの多重化といった機能を提供する。既存ネットワークと連携して動作する。」(168頁右欄36行ないし169頁左欄4行目)との記載によると，引用文献1では，「フロー制御」と「リクエストの多重化」とは異なる機能としており，この記載から想定される構成は別紙6「参考図1」のとおりである。同図に示されるように，上記「リクエストの多重化」は，1つのプロセスに流入するリクエストを複数のスレッドで多重化することによってBCネットワークに出力するものであり，その1つのプロセスに流入するリクエストの流量(フロー)を制御するのが上記「フロー制御」である。したがって，引用発明において，「挙動が安定しなくなる場合があるため，フロント側でリクエストの流量制御を行う等の対策」をとるのは，「フロー制御」(流量制御)であり，「リクエストの多重化」ではない。
          ここで，挙動の不安定を回避するための「フロー制御」は，技術常識上，「流量制御」と同じであるから(甲21ないし25)，「リクエストの流量制御」は，技術常識上，①キュー長の調整又は②リクエスト送信頻度の低下のいずれかである(甲19)。
          したがって，引用文献1に「挙動が安定しなくなる場合があるため，フロント側でリクエストの流量制御を行う等の対策が必要となり得る」旨の記載があるからといって，引用文献1に「スレッドの数を制限することを示唆する」記載があるとはいえず，「スレッドの多重度を制限することを示唆する」記載があるともいえない。
        (イ)
          被告は，引用文献1における「リクエストの流量制御」とは，単位時間当たりの「リクエスト総数」，すなわち，「スレッド当たりのリクエスト数×スレッド数」を制御するものであって，「流量制御」を行うために，スレッド数とリクエスト数の双方が制御の対象となっている旨主張するが，引用文献1には，「リクエストの流量制御」が単位時間当たりのリクエスト総数の制御であるとの記載はないし，仮に，「リクエスト流量制御」をすることが単位時間当たりの「リクエスト総数」を制御することであったとしても，それが「スレッド当たりのリクエスト数×スレッド数」を制御することに等しいということを引用文献1の開示事項から読み取ることはできない。
          また，引用文献1においては，「負荷が大きすぎること」，すなわち「単位時間当たりのリクエスト数が大きすぎること」しか課題として認識できておらず，「並列度が高すぎること」を課題として認識しているのではないから，上記課題を認識するための手段としてスレッドの数を増加させてみた測定結果にすぎない記載をもって，「スレッド数(並列度)の制御」を，「リクエストの流量制御」における課題解決手段として用いることができると読み取ることはできない。
      イ スレッドとプロセスの置換に関して
        (ア)
          被告は，生成部においてプロセス多重度を制限することは本件補正発明の発明特定事項に基づくものではない旨主張するが，本願明細書には，「閾値Thnよりも小さいプロセス多重度をプロセス110の数としてプロセス生成装置11に設定する」ことにより，「ブロックチェーンネットワーク5における演算処理能力にボトルネックを発生させずに，リクエストの送信側においてボトルネックを発生させることでき」，「プロセス生成装置11において不要なプロセス110を生成しないようにして，リクエスト制御システム1のリソースを効率的に用いることができる」(以上，本願明細書【0046】，図1)との記載があるから，「設定されるプロセス多重度に応じた複数のプロセスを生成する生成部」という発明特定事項によれば，「リクエストの多重化を実現するプロセス数を必要な数に制御すること」や「不要なプロセスを生成せずにリソースを効率的に用いること」といった具体的な効果まで発明特定事項において特定されなくとも，本件補正発明がプロセス多重度を制限する構成として特定されたものといえるのは明らかである。
        (イ)
          本件審決は，「マルチプロセスを採用した場合に，プロセスの多重度を制限するため『プロセスの多重度に応じた』複数のプロセスを生成することは，リクエスト送信を割り当てるスレッドの数を制限するという上記示唆に基づいて，当業者であれば容易に想到し得るものである。」(19頁24ないし28行目)とするが，誤りである。
          仮に，引用文献1に「スレッドの数を制限することを示唆するのであって，スレッドの多重度を制限することを示唆する」旨の記載があるとしても，マルチプロセスではない引用発明からは，1つのプロセスにおいてスレッドの多重度を制限することが示唆されるだけであって，プロセス多重度を制限することまで示唆されることはない。
          また，プロセスは1個のメモリ空間が割り当てられた実行プログラムであるのに対して，スレッドはプロセス内に所在してCPUコアに対する命令を実行する単位をいい，この両者はハードウェア資源の利用態様が相違するため，これらを相互に置換することはできない。すなわち，別紙6「参考図1」に示すように，引用発明は1つのプロセスにおいてマルチスレッドを実現するものであるから，プロセスがスレッドの多重度の制限をするが，一方，別紙7「参考図2」に示すように，本件補正発明におけるマルチプロセスの多重度は，各プロセスの生成を制御する生成部が制限する。このように，引用発明におけるスレッドとプロセスとの関係は，本件補正発明におけるプロセスと生成部との関係に対応する。参考図1のような引用発明におけるスレッドとプロセスとの関係を，参考図2のような本件補正発明におけるプロセスと生成部との関係に置換することが容易想到であるという根拠は存在しない。
      ウ 顕著な効果に関して
        本願明細書の記載(【0046】，図1)によると，本件補正発明は，プロセス生成装置において不要なプロセスを生成しないようにして，リクエスト制御システムのリソースを効率的に用いることができるとの顕著な効果を奏する。
        一方，引用発明においては，別紙6「参考図1」に示すように，リクエストの流量制御がリクエストの多重化の前段階のフロー制御で行われ，スレッドの数は変わることがなく，不要なスレッドが残ったままであるから，リソースを効率的に用いることができない。
      エ まとめ
        以上のとおり，相違点3を容易想到と判断した本件審決の判断には誤りがある。
    (2) 小括
      前記(1)からすれば，本件補正が独立特許要件を充足しないとした本件審決の判断には誤りがあり，本件補正を却下して本願発明が進歩性を欠如するとして本件出願を拒絶すべきものと判断した本件審決の判断にも，誤りがある。
  2 被告
    (1) 相違点3の容易想到性の有無について
      ア 引用文献1の記載事項に関して
        (ア)
          引用文献1には，スループットの計算方法を，「全スレッドによる合計リクエスト数／(全レスポンスが返ってきた時刻-リクエスト処理を開始した時刻)」とし，1スレッドあたりのリクエスト数を1000あるいは200に固定して(171頁左欄24行ないし右欄7行目，171頁表3)，スレッド数を変えながら測定した結果から，「ある程度並列度を増やすとスループットは頭打ちになった．」，「スループットが頭打ちになった後も，それ以上に並列度を増やしていくと，内部的にエラーが発生する等，安定稼働が困難となる場合が見受けられた．」との評価が行われたことが開示されている(171頁右欄27ないし39行目，172頁図3及び172頁図4)。
          そうすると，引用文献1における，「高負荷を与えた場合には，挙動が安定しなくなる場合があるため，フロント側でリクエストの流量制御を行う等の対策が必要となり得る。」(171頁右欄27ないし39行目)との記載における「リクエストの流量制御」とは，単位時間当たりの「リクエスト総数」，すなわち，「スレッド当たりのリクエスト数×スレッド数」を制御するものであって，「流量制御」を行うために，スレッド数とリクエスト数の双方が制御の対象となっていると解されるから，スレッド数を制限することも示唆されているというべきである。
          さらに，引用文献1には「2.3  本研究の課題  BCの実適用に向けては，BC基盤およびその実装における現時点での技術課題の明確化が必要である．特に，金融業務への適用に向けては，一般的にトランザクションのスループットが性能面の最重要指標である．」(169頁左欄29ないし33行目)，「図3にセキュリティ機能OFF時の，図4にセキュリティ機能OＮ時のinvoke／queryスループット測定結果を示す．図に示す通り，セキュリティ機能OFF／OＮ時ともに，invokeとqueryの両方で，並列スレッド数を増やしていくとスループットも増加する傾向にあった．ただし，ある程度並列度を増やすとスループットは頭打ちとなった．また，スループットが頭打ちになった後も，それ以上に並列度を増やしていくと，内部的にエラーが発生する等，安定稼働が困難となる場合が見受けられた．つまり，高負荷を与えた場合には，挙動が安定しなくなる場合があるため，フロント側でリクエストの流量制御を行う等の対策が必要となり得る．」(171頁右欄27ないし39行目)との記載があるところ，これらの記載から，引用文献1には，トランザクションのスループットが性能面の最重要指標であり，並列スレッド数(並列度)を増やしていくとスループットが増加する傾向にあるが，ある程度並列度を増やしていくとスループットは頭打ちになり，さらに並列度を増やしていくと，高負荷が与えられて挙動が安定しなくなる場合があるため，フロント側でリクエストの流量制御を行う等の対策が必要となり得ることが開示されているといえる。
          そうすると，引用文献1には，並列度を増加させると高負荷となるので，この高負荷を抑制するために流量制御を行う必要があるところ，この流量制御を行うための一つの手段として並列度を制限することが示唆されている。そして，上記流量制御を行うためには，「並列度」を増やしていって「挙動が安定しなくなる」手前の「並列度」，つまり，「挙動が不安定にならない最大の並列度」(適切な並列度)に制限する必要があることが理解できる。
          したがって，引用文献1には，並列スレッド数を制限することを示唆する記載があるといえる。
        (イ)
          原告が引用する引用文献1の「BCサービス：P2Pプロトコル，分散台帳，コンセンサスマネージャといった要素によって構成される．P2Pプロトコルにより，P2Pでの双方向ストリーミング，フロー制御，リクエストの多重化といった機能を提供する．既存ネットワークと連携して動作する．」との記載における「フロー制御」や「リクエストの多重化」は，「BCサービス」の要素である「P2Pプロトコル」による機能として紹介されているのであるから，ここでいう「フロー制御」及び「リクエストの多重化」は，ブロックチェーンネットワークを構成するノード同士の通信に関して説明したものであり，参考図1でいえば，最下部の「BCネットワーク」の内部で行われる通信におけるものを指すにすぎない。
      イ スレッドとプロセスの置換に関して
        (ア)
          引用発明のマルチスレッドと本件補正発明の複数のプロセスは，ともに，トランザクションのリクエストを送信する複数の処理単位である点で共通しており，引用文献2及び3に記載される周知技術によれば，並列処理を実行するマルチスレッドとマルチプロセスは，相互に置き換え可能なものである。
          そして，引用発明のマルチスレッドは本件補正発明の複数のプロセスに対応付けられるから，マルチスレッドを生成する生成部が，複数のプロセスを生成する生成部に対応付けられることは自明である。
          したがって，本件審決が，引用発明において，プロセス多重度に応じた複数のプロセスを生成することを容易想到であると判断した点に誤りはない。
        (イ)
          原告は，本件補正発明では，生成部においてリクエストの多重化を実現するプロセスの数を必要な数に制御することによって，不要なプロセスを生成せずにリソースを効率的に用いることができると主張するが，相違点3に係る本件補正発明の発明特定事項は「設定されるプロセス多重度に応じた複数のプロセスを生成する生成部」であって，単に「プロセス多重度」が「設定される」だけであって，「閾値Thnよりも小さいプロセス多重度」が「設定される」ことは特定されていない。原告の主張は，本件補正発明の発明特定事項に基づくものではなく，失当である。
      ウ 顕著な効果に関する主張について
        前記イ(イ)のとおり，原告の主張は，本件補正発明の発明特定事項に基づくものではなく，失当である。
        また，本件補正発明のようにプロセス多重度を設定するものではない引用発明との対比によって，プロセス多重度に基づく本件補正発明が顕著な効果を奏すると主張することも失当である。
    (2) 小括
      相違点3を容易に想到できるとした本件審決の判断に誤りはないから，本件補正を却下すべきであるとした本件審決の判断にも誤りはなく，本願発明を審理の対象として進歩性を欠如するとして本件出願を拒絶すべきものと判断した本件審決の判断にも，誤りはない。
第4 当裁判所の判断
  1 認定事実
    (1) 本願発明について
      本願明細書には，別紙1「本願明細書の記載事項(抜粋)」のとおりの記載があり，この記載によると，本件出願に係る発明について，次のような開示があると認められる。
      ア 技術分野
        本件出願に係る発明は，トランザクションをブロックチェーンネットワークにリクエストするための技術に関する(【0001】)。
      イ 背景技術
        ブロックチェーンを用いた分散型台帳技術が，ビットコイン等の暗号資産(仮想通貨)を管理する方法として用いられているが，近年では，これらの技術は，このような暗号資産だけではなく，様々な資産を管理したり移動したりする方法として用いることも検討されている(【0002】)。
      ウ 発明が解決しようとする課題
        分散型台帳技術では，P2P(Peer  to  Peer)によって接続された複数のノードによってネットワークが形成され，そのネットワークにおける複数のノードによって台帳が分散して記録されるところ，分散型台帳技術においては，ほとんどの場合，ブロックチェーンが台帳に記録され，台帳に直接記録されない場合でも何らかの形態で用いられる(【0004】)。
        ブロックチェーンネットワークを構成する各ノードによれば，互いが保持するデータの正当性を高めるために，所定のアルゴリズムによって合意形成が行われるが，これによって，データの改ざんが難しくなり，取引の信頼性が保たれるものの，一般的には合意形成の処理には多くの時間を要すると考えられているため，大量のトランザクションが発生するような処理に適用することは難しいと考えられている(【0005】)。
        本件出願に係る発明の目的の一つは，分散型台帳技術を用いた場合でも，多くのトランザクションを効率よく処理することにある(【0006】)。
      エ 課題を解決するための手段
        本件出願に係る発明の一実施形態によれば，台帳を分散して記録する複数のノードの少なくとも1つに対し，トランザクションのリクエストを送信する複数のプロセスを生成する生成部と，トランザクションの指示を受け付け，前記複数のプロセスのいずれかに当該トランザクションのリクエスト送信を割り当てる割当部と，を備えるシステムが提供される(【0007】)。
        前記複数のノードで形成されるネットワークにおける所定のトランザクションのリクエストに対する平均スループットとプロセス多重度との関係において，プロセス多重度の増加に対する平均スループットの増加の割合が，プロセス多重度が第1値のときに第1割合であり，当該第1値より大きい第2値以上であるときに前記第1割合より小さい第2割合であり，前記複数のプロセスの数は，前記第2値よりも小さい数で設定されてもよい(【0010】)。
        前記複数のノードで形成されるネットワークは，コンソーシアム型であってもよい(【0011】)。
        本件出願に係る発明の一実施形態によれば，トランザクションの指示を受け付け，台帳を分散して記録する複数のノードの少なくとも1つに対し，トランザクションのリクエストを送信する複数のプロセスのいずれかに，前記指示に基づくトランザクションのリクエスト送信を割り当てる，処理方法が提供される(【0012】)。
      オ 発明の効果
        本件出願に係る発明の一実施形態によれば，分散型台帳技術を用いた場合でも，多くのトランザクションを効率よく処理することができる(【0017】)。
      カ 発明を実施するための形態
        (ア)
          ブロックチェーンネットワーク5における演算処理能力にボトルネックが存在する状況は，極めて多くの処理が集中した場合であって，実際には，その前の段階，すなわちトランザクションのリクエストを送信する側においてボトルネックが存在する場合が多いとの知見に基づき，リクエスト制御システム1では，ブロックチェーンネットワーク5における演算処理能力にボトルネックが存在する段階までリクエストを送信するためのプロセスを多重化することで，処理量を向上させることができる(【0022】)。
        (イ)
          実施形態のブロックチェーンネットワークは，管理主体が存在するコンソーシアム型(例えば，Quorum，Hyperledger  Fabric等)を想定しているが，管理主体が存在しないパブリック型(例えば，Ethereum等)であっても適用可能である。(【0026】)。
        (ウ)
          プロセス生成装置11Aは，設定装置39から指定された数のプロセス110を起動するとともに，各プロセス110においてトランザクションのリクエストを送信してから，ブロックチェーンネットワーク5においてトランザクションが分散型台帳に記録されたことを検出するまでの時間(以下「スループット」という。)を測定する。この測定したスループットを設定装置39に送信する(【0040】)。
          設定装置39は，プロセス生成装置11A及び指示生成装置38を制御して，プロセス多重度(プロセス110の数：m個)を変更しつつ，1プロセス当たりの平均スループットを測定する。これによって，設定装置39は，プロセス多重度と平均スループットとの関係を取得し，この関係を用いて，利用するブロックチェーンネットワーク5における最適なプロセス110の数を算出するが，この数は，上述したn個に相当するものとして，リクエスト制御システム1におけるプロセス生成装置11に設定される(【0042】)。
          図6は，本発明の一実施形態におけるプロセス多重度と平均スループットとの関係を説明する図であるところ，プロセス多重度が低い場合，プロセス多重度の増加に伴い平均スループットは増加していくが，プロセス多重度が大きくなると，プロセス多重度が増加しても，平均スループットは増加しなくなっていくように，プロセス多重度が大きい値Ｎ2である場合の平均スループットの増加の割合は，プロセス多重度が小さい値Ｎ1(第1値)である場合の平均スループットの増加の割合(第1割合)よりも小さい(【0044】)。特定のプロセス多重度における平均スループットの増加の割合は，図6に示すグラフにおいて，そのプロセス多重度における傾き(微分値)に相当するところ，この増加の割合(増加率)がプロセス多重度の増加に対して大きく減少し始めるとき(第2割合)のプロセス多重度が，図6に示す閾値Thn(第2値)に対応する(【0044】)。
          このように，閾値Thnよりもプロセス多重度が小さい領域A1においては，ブロックチェーンネットワーク5における演算処理能力にボトルネックがあるのではなく，リクエストを送信する側の処理にボトルネックがあり，一方，閾値Thnよりもプロセス多重度が大きい領域(判決注・前後の文脈から「量器」は「領域」の誤記と認める。)A2においては，プロセス多重度を増加させても，平均スループットがほとんど増加しないことから，ブロックチェーンネットワーク5における演算処理能力にボトルネックがあることが分かる(【0045】)。
          設定装置39が，閾値Thnよりも小さいプロセス多重度をプロセス110の数としてプロセス生成装置11に設定することにより，ブロックチェーンネットワーク5における演算処理能力にボトルネックを発生させずに，リクエストの送信側においてボトルネックを発生させることができ，プロセス生成装置11において不要なプロセス110を生成しないようにして，リクエスト制御システム1のリソースを効率的に用いることができる(【0046】)。
    (2) 引用発明1について
      引用文献1には，別紙2「引用文献1の記載事項(抜粋)」のとおりの記載があり，この記載によると，引用発明として，本件審決が認定するとおりのものを認定することができ，この点は，当事者間にも争いがない。
  2 取消事由(本件補正発明の進歩性に関する判断の誤り)の有無について
    (1) 相違点3の容易想到性の有無について
      ア 引用文献1の記載事項に関して
        引用文献1には，①課題として，「2.3  本研究の課題  BCの実適用に向けては，BC基盤およびその実装における現時点での技術課題の明確化が必要である．特に，金融業務への適用に向けては，一般的にトランザクションのスループットが性能面の最重要指標である．」(169頁左欄29ないし33行目)を掲げ，②課題抽出に向けての目的として，「目的2：Fabric／BC基盤の性能ボトルネック抽出方法の検討  性能限界や傾向を把握するためには，そのボトルネック箇所を特定することが重要である．」(169頁右欄9ないし38行目)とし，③測定方法として，マルチスレッドでトランザクションを並列実行して負荷をかけるものとし，その方法として，スレッドごとにトランザクションを指定した回数繰り返し，全スレッドのトランザクションが完了するまでの時間を測定することとし(171頁左欄3ないし23行目)，④トランザクションのスループットの計算方法を，「全スレッドによる合計リクエスト件数／(全レスポンスが返ってきた時刻-リクエスト処理を開始した時刻)」とし，1スレッドあたりのリクエスト数を1000あるいは200に固定し，並列スレッド数を変える等の条件で実験したところ(171頁左欄24行ないし右欄7行目，171頁表3)，⑤結果として，「並列スレッド数を増やしていくとスループットも増加する傾向にあった．ただし，ある程度並列度を増やすとスループットは頭打ちとなった．また，スループットが頭打ちになった後も，それ以上に並列度を増やしていくと，内部的にエラーが発生する等，安定稼働が困難となる場合が見受けられた．つまり，高負荷を与えた場合には，挙動が安定しなくなる場合があるため，フロント側でリクエストの流量制御を行う等の対策が必要となり得る．」(171頁右欄27ないし39行目，172頁図3，172頁図4)との知見が得られたとの記載がある。
        これらの記載によると，引用文献1の実験においては，スレッド当たりのリクエスト数をセキュリティ機能のOFF又はOＮの相違に従って固定し，並列スレッド数を変化させてスループット(1秒当たりのリクエスト処理量)を測定しているのであり，「全スレッドによる合計リクエスト件数」は並列スレッド数にのみ左右されるから，引用文献1は，専ら並列スレッド数とスループットとの関係を測定したものであり，その測定結果として，並列スレッド数の増加に対するスループットは，ある程度までは増加し，一定程度で頭打ちとなり，その後は挙動不安定になるというものが得られたとするものである。そうすると，引用文献1は，並列スレッド数を増加させていけばスループットは増加するが，ある程度以降は挙動が安定しなくなるので，その場合には並列スレッド数の増加による効果がなくなり，「リクエストの流量制限」で対応しなければならないと理解すべきものであるから，その記載内容は，スレッド数の増加による効果には一定の最大限度があることを含意するものというべきである。
        以上のとおりであるから  原告の前記第3の1(1)アの主張は採用することができない。なお，原告は，引用文献1においては，「負荷が大きすぎること」，すなわち「単位時間当たりのリクエスト数が大きすぎること」を認識するための手段としてスレッドの数を増加させてみた測定結果が記載されているのにすぎず，このような記載をもって，「スレッド数(並列度)の制御」を，「リクエストの流量制御」における課題解決手段として読み取ることはできないない旨主張するが，前述のとおり，引用文献1の該当部分の記載は，単に課題認識手段としての測定結果を表示したものとはいえず，スレッドの数を増加させた場合の結果に応じて，課題解決に向けた対応策の示唆等にも及ぶものであるから，原告の前記主張は前提を欠くものというべきである。
        したがって，引用文献1には，引用発明がスレッド数を制御すること，少なくとも，スレッドの多重度を設定し，これより，設定されるスレッド多重度に応じた複数のスレッドを生成するものであるとの記載があると認められる。
      イ スレッドとプロセスの置換について
        (ア)
          相違点3は，「本件補正発明は，生成部が『設定されるプロセス多重度に応じた』複数のプロセスを生成するものであるのに対して，引用発明は，そのような特定がなされていない点」というものである。
        (イ)
          引用文献2の記載事項は別紙3「引用文献2の記載事項(抜粋)」のとおりであり，引用文献3の記載事項は別紙4「引用文献3の記載事項(抜粋)」のとおりであり，甲4文献の記載事項は別紙5「甲4文献の記載事項(抜粋)」のとおりであり，これらの記載事項からすると，並列処理を実現するに当たり，マルチプロセス及びマルチスレッドはどちらも周知の技術であり，どちらを用いて並列処理を実現するかは，当業者が技術的要件等に基づき適宜設計的に決定し得た事項であることが認められる。
        (ウ)
          ここで，本件補正発明についてみると，本件補正発明は「トランザクションのリクエストを送信する複数のプロセスであって，設定されるプロセス多重度に応じた複数のプロセスを生成する生成部」を備えるとのみ特定され，「プロセス多重度」はプロセスの数である(本願明細書【0031】，【0038】)。そして，「プロセス多重度」は単に「設定される」と特定されているだけであり，また，設定される「プロセス多重度」と生成されるプロセスとがどのような関係において対応するのかは何ら特定されていない。これに対し，本件補正後の請求項4に係る発明は，「当該プロセス多重度の増加に対する平均スループットの増加の割合が，プロセス多重度が第1値のときに第1割合であり，当該第1値より大きい第2値以上であるときに前記第1割合より小さい第2割合であり，前記複数のプロセスの数は，前記第2値よりも小さい数で設定される」と，同請求項8に係る発明は，「当該プロセス多重度の増加に対する平均スループットの増加の割合が，プロセス多重度が第1値のときに第1割合であり，当該第1値より大きい第2値以上であるときに前記第1割合より小さい第2割合であり，前記複数のプロセスの数は，前記第2値よりも小さい数で設定される」とされており，これら発明との対比からして，本件補正発明は，これらプロセス数を所定の数に制限する特定がされていないものと理解できる。したがって，本件補正発明は，プロセス数が制御されるものであればこれらを全て含むものと認められる。
        (エ)
          前記アのとおり，引用発明の構成は，スレッドの多重度を設定し，設定されるスレッドの多重度に応じた複数のスレッドを生成するものであるところ，前記(イ)のとおり，マルチスレッドとマルチプロセスのいずれの並列処理を実現するかは，当業者が技術的要件等に基づき適宜設計的に決定し得た事項であることからすれば，引用発明のスレッドの構成を適宜プロセスに代え，相違点3に係る，生成部が「設定されるプロセスの多重度に応じた複数のプロセスを生成する」ものに置換することは当業者にとって極めて容易なことであり，これにより引用発明は，前記(ウ)のとおり，本件補正発明に至ることとなる。
      ウ 効果について
        発明の効果が予測できない顕著なものであるかについては，当該発明の特許要件判断の基準日当時，当該発明の構成が奏するものとして当業者が予測することのできなかったものか否か，当該構成から当業者が予測することのできた範囲の効果を超える顕著なものであるか否かという観点から検討する必要があるところ，前記イ(ウ)のとおりの構成とみるべき本件補正発明の効果は，その構成から当然に当業者が予想し得る範囲内のものにすぎない。
      エ 原告の主張について
        前記第3の1(1)記載の原告の主張については，前記認定の中で適宜判断済みであるが，特に補足すべき点については以下のとおりである。
        (ア)
          原告は，前記第3の1(1)イ(ア)のとおり，本願明細書の記載を併せ考慮すれば，「設定されるプロセス多重度に応じた複数のプロセスを生成する生成部」という本件補正発明の発明特定事項によって，プロセス多重度に応じてプロセス数を制限するとの構成が特定されている旨主張する。
          しかしながら，前記イ(ウ)のとおり，特許請求の範囲の記載自体から，プロセス多重度に応じてプロセス数を制限するとの構成は読み取れないし，原告が主張する本願明細書の記載及びプロセス多重度に応じてプロセス数を制限するとの発明特定事項は，本件補正発明とは異なる別の請求項に係るものであるというべきである。
          したがって，原告の上記主張を採用することはできない。
        (イ)
          原告は，前記第3の1(1)イ(イ)のとおり，①マルチプロセスではない引用発明からはスレッド数を制限することが示唆されるだけであって，プロセス数を制限することまで示唆されることはない，②プロセスは1個のメモリ空間が割り当てられた実行プログラムであるのに対して，スレッドはプロセス内に所在してCPUコアに対する命令を実行する単位をいい，この両者はハードウェア資源の利用態様が相違するため，これらを相互に置換することはできない旨主張する。
          上記①の主張についてみると，確かに，並列スレッド数増加によるスループット増加に頭打ちの効果があり，更なる増加はむしろ挙動を安定させなくなることから，スレッド数を制限することが示唆されたとしても，マルチスレッドの構成をマルチプロセスの構成に置換する際に，プロセス数を制限することまでもが直ちに動機付けられるとはいい難い。なぜならば，トランザクションのリクエストを送信する際に，マルチプロセスにもマルチスレッドと同様の頭打ち効果や挙動不安定があるとの知見を前提としていなければ，スレッド数を制限するマルチスレッドの構成を，プロセスを制限するマルチプロセスの構成に置換する動機付けはないからである。この点，「かかるマルチプロセスを採用した場合に，プロセスの多重度を制限するため『プロセスの多重度に応じた』複数のプロセスを生成することは，リクエスト送信を割り当てるスレッドの数を制限するという上記示唆に基づいて，当業者であれば容易に想到し得る」とした本件審決の説示は当を得たものとはいい難い。
          しかしながら，前記(ア)のとおり，プロセス数を制限することは本件補正発明の発明特定事項には含まれず，「プロセス多重度」に対応するプロセス数が設定されるものであればよいものと認められるから，引用発明のマルチスレッドの構成をマルチプロセスの構成に置換すれば本件補正発明に至るのであり，本件審決の判断は結論においては正当であり，原告の上記主張は，本件の結論を左右するものとはいえない。
          次に，上記②の主張についてみると，マルチスレッドとマルチプロセスとがそれぞれハードウェア資源の利用態様が相違するとしても，マルチスレッド及びマルチプロセスが並列処理を行うための手法として周知であることから，格別な困難でもない限り，マルチスレッドとして構成されたものをマルチプロセスとして構成されたものに転用することは，当業者が適宜なし得る事項である。この転用の際，スレッドからプロセスへ置換する場合に両立しない部分があれば，当業者は技術常識に従い所要の変更を加えることができるのであって，本件補正発明について，それが困難であるとは認められない。
          したがって，原告の上記主張を採用することはできない。
        (ウ)
          そのほか原告がるる主張するところも前記アの認定判断を左右しない。
    (2) 小括
      前記(1)の認定判断によると，相違点3は容易想到であるとした本件審決の判断は結論において相当であり，そうすると，本件補正発明は引用発明及び周知技術に基づいて当業者が容易に発明をすることができたものであるから，本件補正発明は独立特許要件を欠くものであり，本件補正は特許法17条の2第6項で準用する同法126条7項の規定に違反するので，同法159条1項において読み替えて準用する同法53条1項の規定により却下すべきものであって，本件補正を却下した本件審決の判断に誤りがあるとはいえず，また，本願発明についても，当業者が容易に発明をすることができたものということになるから，本件出願を拒絶すべきとした本件審決の判断にも誤りはない。
  3 結論
    よって，取消事由は理由がないから，原告の請求を棄却することとして，主文のとおり判決する。
